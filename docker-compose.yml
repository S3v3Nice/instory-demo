services:
    backend:
        container_name: instory_backend
        build: ./backend
        restart: unless-stopped
        env_file:
            - .env
        volumes:
            - ./backend:/app
            - .env:/app/.env
        depends_on:
            postgres:
                condition: service_healthy

    frontend:
        container_name: instory_frontend
        build: ./frontend
        restart: unless-stopped
        env_file:
            - .env
        volumes:
            - ./frontend:/app
            - .env:/app/.env
            - /app/node_modules

    nginx:
        container_name: instory_nginx
        image: nginx:alpine
        expose:
            - 80
        restart: unless-stopped
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        environment:
            VIRTUAL_HOST: ${APP_HOST:-localhost}
            LETSENCRYPT_HOST: ${APP_HOST}
        depends_on:
            - backend
            - frontend

    nginx-proxy:
        container_name: instory_nginx-proxy
        image: nginxproxy/nginx-proxy:1.7
        ports:
            - "${HTTP_PORT:-80}:${HTTP_PORT:-80}"
            - "${HTTPS_PORT:-443}:443"
        restart: unless-stopped
        volumes:
            - ./docker/nginx/html:/usr/share/nginx/html
            - ./docker/nginx/certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        environment:
            TRUST_DOWNSTREAM_PROXY: false
            HTTP_PORT: ${HTTP_PORT:-80}
            HTTPS_PORT: ${HTTPS_PORT:-443}

    acme-companion:
        container_name: instory_nginx-proxy-acme
        image: nginxproxy/acme-companion:2.5
        restart: unless-stopped
        volumes_from:
            - nginx-proxy
        volumes:
            - ./docker/nginx/certs:/etc/nginx/certs:rw
            - ./docker/nginx/acme:/etc/acme.sh
            - /var/run/docker.sock:/var/run/docker.sock:ro

    postgres:
        image: postgres
        container_name: instory_postgres
        ports:
            - ${DB_PORT}:5432
        restart: unless-stopped
        volumes:
            - ./docker/data/postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
            interval: 5s
            timeout: 3s
            retries: 10
